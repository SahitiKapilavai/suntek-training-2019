1.) To find the missing number in an array with size 1 less than the range of numbers

Code:
#include <stdio.h>
int main()
{
    long int a[50],m,n,i,p=0,q=0;
    printf("Enter the range of numbers to be considered: ");
    scanf("%d %d",&m,&n);
    printf("Enter the array elements:\n");
    for(i=0;i<n-m;i++)
        {printf("a[%d]: ",i);
         scanf("%d",&a[i]);
         printf("\n");
         }
    for(i=m;i<=n;i++)
        p=p^i;
    for(i=0;i<n-m;i++)
        q=q^a[i];
    printf("The missing element is:%d",p^q);
    return 0;
}

----------------------------------------------------------------------------------------

2.)From an array, to find those two numbers whose sum is specified

Code:
#include <stdio.h>
int main(void)
{
    int a[50],i,j,n,c=0,k,t,*p,*q;
    printf("Enter the number of elements in the array:");
    scanf("%d",&n);
    printf("Enter array elements:\n");
    for(i=0;i<n;i++)
    {printf("a[%d]: ",i);
     scanf("%d",&a[i]);
    }
    printf("Enter the sum of two numbers required:");
    scanf("%d",&k);
    for(i=0;i<n;++i)
    for(j=i+1;j<n;++j)
    {if (a[i]>a[j])
     {t=a[i];
      a[i]=a[j];
      a[j]=t;
      }
    }
    p=&a[0];
    q=&a[n-1];
    printf("The elements with sum %d are:\n",k);
    while(c<=n/2)
    {if(*p+*q<k)
        p++;
     else if(*p+*q>k)
        k--;
     else if(*p+*q==k)
        {printf("%d %d\n",*p,*q);
         p++;
         q--;
        }
     if(p==q)
        break;
     c++;
    }
    return 0;
}

--------------------------------------------------------------------------------------------

3.)To find common sub-string prefix in the given set of strings

Code:
#include <stdio.h>
#include <string.h>
void main()
{char a[20][50],b[50],pre;
int i,j,n,min,f=0,k=0;
printf("Enter the number of words:");
scanf("%d",&n);
printf("Enter %d words:",n);
for(i=0;i<n;i++)
    scanf("%s",a[i]);
min=strlen(a[0]);
for(i=1;i<n;i++)
 if(strlen(a[i])<min)
   min= strlen(a[i]);
for(j=0;j<min;j++)
{pre=a[0][j];
 for(i=1;i<n;i++)
    if(a[i][j]!=pre)
        {f=1;
         goto x;
        }
 if(f!=1)
 {b[k]=pre;
 k++;}
}
x:b[k]='\0';
if(b[0]=='\0')
    printf("No common prefix");
else
    printf("The common prefix is:%s",b);
}

-------------------------------------------------------------------------------------

4.)Longest Palindrome Substring

Code:
#include <stdio.h>
#include <string.h>
void p(char* str, int l, int h)
{
    for( int i = l; i <= h; ++i )
        printf("%c",str[i]);
}
void longest(char *str)
{
    int max = 1;
    int s = 0;
    int len = strlen(str);

    int l, h;

    for (int i = 1; i < len; ++i)
    {
        l = i - 1;
        h = i;
        while (l>= 0 && h < len && str[l] == str[h])
        {
            if (h - l + 1 > max)
            {
                s = l;
                max = h - l + 1;
            }
            l--;
            h++;
        }

        l = i - 1;
        h = i + 1;
        while (l >= 0 && h < len && str[l] == str[h])
        {
            if (h - l + 1 > max)
            {
                s = l;
                max = h - l + 1;
            }
            l--;
            h++;
        }
    }

    printf("Longest palindrome substring: ");
    p(str, s, s + max - 1);

}

int main()
{   char str[50];
    printf("Enter a string: ");
    scanf("%s",str);
    longest(str);
    return 0;
}

-------------------------------------------------------------------------------------------

5.)To find minimum number of characters required to make the given string palindrome

Code:
#include <stdio.h>
#include <string.h>
int min(int a, int b)
{  if(a<b)
     return a ;
   else
     return b; }

int fmin(char str[], int l, int h)
{
    if (l > h)
    return 0;
    if (l == h)
        return 0;
    if (l == h - 1)
    {if(str[l] == str[h])
          return 0;
        else
          return 1;
    }
    if(str[l] == str[h])
        return fmin(str, l + 1, h - 1);
    else
        return (min(fmin(str, l, h - 1),fmin(str, l + 1, h)) + 1);
}


int main()
{
    char str[50];
    printf("Enter the string:");
    scanf("%s",&str);
    printf("%d", fmin(str, 0, strlen(str)-1));
    return 0;
}

---------------------------------------------------------------------------------------------

6.)To print all the elements of the given matrix diagonally

Code:
#include <stdio.h>
#include <stdlib.h>

int min(int a, int b)
{ return (a < b)? a: b; }

int max(int a, int b)
{ return (a > b)? a: b; }

int main()
{
    int a[100][100],i,j,r,c,f,l,scol;
    printf("Enter the number of rows and columns: ");
    scanf("%d %d",&r,&c);
    printf("Enter the matrix: ");
    for (i=0; i<r; i++)
    {for (j=0; j<c; j++)
            scanf("%d",&a[i][j]);
    }
    printf ("Given matrix is: \n");
    for (i=0; i< r; i++)
    {
        for (j=0; j<c; j++)
            printf("%5d ", a[i][j]);
        printf("\n");
    }

    printf ("\nDiagonal printing of matrix is: \n");
     for (l=1; l<=(r+c-1); l++)
    {
        scol=max(0, l-r);
        f = min(l,(c-scol));
        for(j=0; j<f; j++)
            printf("%5d ",a[min(r,l)-j-1][scol+j]);
        printf("\n");
    }

    return 0;
}

